package com.backend.config;

import java.beans.Customizer;
import java.net.Authenticator.RequestorType;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.web.cors.CorsConfiguration;
import org.springframework.web.cors.CorsConfigurationSource;
import org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource;

import jakarta.websocket.Session;


@Configuration
@EnableWebSecurity
public class SecurityConfig {

	@Autowired
	private UserDetailsService userDetailsService;
	
	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity https) throws Exception
	{
		return https
//                .csrf(customizer -> customizer.disable())
				.cors(corsConfig->corsConfig.configurationSource(getConfigurationSource()));
                .authorizeHttpRequests(request -> request.anyRequest().authenticated())
                .httpBasic(org.springframework.security.config.Customizer.withDefaults())
                .sessionManagement(session -> 
                session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
              .build();
	}
	
//	@Bean
//	public UserDetailsService userDetailsService() {
//		UserDetails user1= User
//				.withDefaultPasswordEncoder()
//				.username("deepu")
//				.password("pagal")
//				.roles("USER")
//				.build();
//		
//		
//		UserDetails user2= User
//				.withDefaultPasswordEncoder()
//				.username("yudi")
//				.password("pagal")
//				.roles("ADMIN")
//				.build();
//		return new InMemoryUserDetailsManager(user1,user2);
//		
//	}
	
	
	@Bean
	public AuthenticationProvider authenticationProvider()
	{
		DaoAuthenticationProvider provider=new DaoAuthenticationProvider();
		provider.setPasswordEncoder(NoOpPasswordEncoder.getInstance());
		provider.setUserDetailsService(userDetailsService);
		return provider;
	}
	
	private static CorsConfigurationSource getConfigurationSource()
	{
		var cross=new CorsConfiguration();
		cross.setAllowedMethods(List.of("*"));
		cross.setAllowedOrigins(List.of("http://localhost:5173/"));
		var source =new UrlBasedCorsConfigurationSource();
		source.registerCorsConfiguration("/**",cross);
		return source;
	}
}
